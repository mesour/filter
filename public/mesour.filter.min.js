/* src/mesour.filter.js */
var mesour=!mesour?{}:mesour;mesour.filter=!mesour.filter?{}:mesour.filter;(function($){var f=function(){var e=this;this.translations={months:{1:'January',2:'February',3:'March',4:'April',5:'May',6:'June',7:'July',8:'August',9:'September',10:'October',11:'November',12:'December'},closeAll:'close all'};this.filters={};this.create=function(){$('[data-mesour-filter]').each(function(){var c=$(this),name=c.attr('data-mesour-filter');var d=c.data('mesour-filter-instance');if(!d){e.filters[name]=d=new mesour.filter.Filter(name,c);c.data('mesour-filter-instance',d)}$.each(d.getDropdowns(),function(a,b){b.destroy();b.create();b.update();b.getFilter().filterCheckers();if(mesour.cookie(name+'-'+b.getName())==='1'){b.open()}})})}};mesour.core.createWidget('filter',new f());mesour.on.live('mesour-filter',function(){mesour.filter.create()})})(jQuery);
/* src/mesour.filter.Checkers.js */
mesour.filter.Checkers=function(d){var f=d.getElement().find('.select-all'),allSearchedCheckedCheckbox=d.getElement().find('.select-all-searched'),checkers=d.getElement().find('.box-inner ul .checker'),searchInput=d.getElement().find('.search-input').val(null),checkChecked=function(a,b){var c=true;a.each(function(){if(!$(this).is(':checked')){c=false}});if(c){b.prop('checked',true).closest('li').addClass('li-checked')}else{b.prop('checked',false).closest('li').removeClass('li-checked')}},checkAllChecked=function(a){if(allSearchedCheckedCheckbox.is(':visible')){checkChecked(checkers.filter(':visible'),allSearchedCheckedCheckbox)}checkChecked(checkers,f);if(!a){d.save();d.getFilter().apply()}},allCheckboxCallback=function(e){var a=$(this);var b=!a.hasClass('select-all-searched')?'':':visible';if(a.is(':checked')){a.closest('li').addClass('li-checked').closest('ul').find('.checker'+b).prop('checked',true).trigger('change',true)}else{a.closest('li').removeClass('li-checked').closest('ul').find('.checker'+b).prop('checked',false).trigger('change',true)}d.save();d.getFilter().apply()},checkAllSubChecked=function(a){var b=a.closest('.toggled-sub-ul');if(!b.is('*'))return;checkChecked(b.children('li').children('.checker'),b.closest('li').children('.checker'));var c=b.closest('li').parent('ul').closest('li');if(!c.is('*'))return;checkChecked(c.children('ul').children('li').children('.checker'),c.children('.checker'))};d.getElement().find('.all-select-searched-li').hide();f.off('change.data-grid');f.on('change.data-grid',allCheckboxCallback);allSearchedCheckedCheckbox.off('change.data-grid');allSearchedCheckedCheckbox.on('change.data-grid',allCheckboxCallback);checkers.on('change',function(e,a){var b=$(this),li=b.closest('li'),sub_ul=li.find('.toggled-sub-ul');if(b.is(':checked')){li.addClass('li-checked');if(sub_ul.is('*')){sub_ul.find('.checker').prop('checked',true).closest('li').addClass('li-checked')}}else{li.removeClass('li-checked');if(sub_ul.is('*')){sub_ul.find('.checker').prop('checked',false).closest('li').removeClass('li-checked')}}checkAllSubChecked(b);checkAllChecked(a)});checkers.next('label').each(function(){var a=$(this);if(a.text().length>40){a.text(a.text().substr(0,37)+'...')}});d.getElement().find('.close-all a').on('click',function(e){e.preventDefault();var b=$(this);b.closest('li').children('ul').find('ul').each(function(){var a=$(this);a.slideUp();a.closest('li').find('.toggle-sub-ul').removeClass('glyphicon-minus').addClass('glyphicon-plus')})});d.getElement().find('.toggle-sub-ul').on('click',function(e){e.preventDefault();var a=$(this),subselect=a.closest('li').children('ul'),closeAll=a.closest('li').children('.close-all');if(subselect.is(':visible')){subselect.slideUp();closeAll.hide();a.removeClass('glyphicon-minus').addClass('glyphicon-plus')}else{subselect.slideDown();closeAll.show();a.removeClass('glyphicon-plus').addClass('glyphicon-minus')}});searchInput.off('keyup.filter-checkers');searchInput.on('keyup.filter-checkers',function(){var b=$(this),value=mesour.core.removeDiacritics(b.val().toLowerCase()),checkers=b.closest('.inline-box').next('.box-inner').find('ul .checker'),one_hide=false;allSearchedCheckedCheckbox.closest('li').hide();checkers.closest('li').show();checkers.closest('li').each(function(){var a=$(this);if(mesour.core.removeDiacritics(a.text().toLowerCase()).indexOf(value)===-1){a.hide();one_hide=true}});if(one_hide){allSearchedCheckedCheckbox.closest('li').show()}checkAllChecked(true)});this.getChecked=function(){var b=[];checkers.filter('[data-value]').each(function(){var a=$(this);if(a.is(':checked')){b.push(a.attr('data-value'))}});return b};this.check=function(a){checkers.filter('[data-value="'+a+'"]').prop('checked',true).trigger('change',true)}};
/* src/mesour.filter.CustomFilter.js */
mesour.filter.CustomFilter=function(c){var d=c.getFilter().getFilterModal();var f=function(){var a=Number(mesour.core.phpDate('n'));if(a<=3)return 1;if(a<=6)return 2;if(a<=9)return 3;return 4};var g=function(a,b){b=!b?phpDate('Y'):b;switch(a){case 1:return mesour.core.strtotime(b+'-01-01');case 2:return mesour.core.strtotime(b+'-04-01');case 3:return mesour.core.strtotime(b+'-07-01');default:return mesour.core.strtotime(b+'-10-01')}};var h=function(a,b){b=!b?mesour.core.phpDate('Y'):b;switch(a){case 1:return mesour.core.strtotime(b+'-03-31');case 2:return mesour.core.strtotime(b+'-06-30');case 3:return mesour.core.strtotime(b+'-09-30');default:return mesour.core.strtotime(b+'-12-31')}};var i=function(a){return a};c.getElement().find('.mesour-open-modal').on('click',function(e){e.preventDefault();var a=$(this),values=c.getValues('custom'),type1=a.attr('data-type-first'),type2=a.attr('data-type-second'),firstValue=a.attr('data-first-value'),secondValue=a.attr('data-second-value'),operator=a.attr('data-operator');if(a.hasClass('edit-filter')&&values){type1=values.how1;type2=values.how2;operator=values.operator;firstValue=values.val1;secondValue=values.val2}d.find('[data-name]').val(c.getName());if(firstValue){var b=i(firstValue);if(typeof b==='string'&&b.split('-').length!==3){d.find('#grid-value-1').val(b);d.find('#grid-value-1').removeAttr('data-date-defaultDate')}else{if(typeof b==='string'&&b.split('-').length===3){b=[b]}d.find('#grid-value-1').val(b[0]);d.find('#grid-value-1').attr('data-date-defaultDate',b[0])}}else{d.find('#grid-value-1').val(null)}if(secondValue){var b=i(secondValue);if(typeof b==='string'){d.find('#grid-value-2').val(b);d.find('#grid-value-2').removeAttr('data-date-defaultDate')}else{d.find('#grid-value-2').val(b[0]);d.find('#grid-value-2').attr('data-date-defaultDate',b[0])}}else{d.find('#grid-value-2').val(null)}if(type1){d.find('#grid-how-1').val(type1)}else{d.find('#grid-how-1').val(null)}if(type2){d.find('#grid-how-2').val(type2)}else{d.find('#grid-how-2').val(null)}if(operator==='or'){d.find('input[name="operator"][value=or]').prop('checked',true)}else{d.find('input[name="operator"][value=and]').prop('checked',true)}if(c.getType()==='date'){d.find('.input-group-addon').show();$('#grid-datepicker1, #grid-datepicker2').data('DateTimePicker').destroy();$('#grid-datepicker1, #grid-datepicker2').bootstrapDatetimepicker({pickTime:false});d.find('#grid-value-1, #grid-value-2').on('keydown.data-grid',function(e){e.preventDefault();if(e.keyCode===46||e.keyCode===8){$(this).val(null)}})}else{d.find('.input-group-addon').hide();d.find('#grid-value-1, #grid-value-2').off('keydown.data-grid')}$('.mesour-filter-modal').fadeIn(function(){d.find('#grid-value-1').focus()})})};
/* src/mesour.filter.Filter.js */
var mesour=!mesour?{}:mesour;if(!mesour.filter){throw new Error('Widget mesour.filter is not created. First create mesour.filter widget.');}mesour.filter.applyFilter=function(a,b){b=$.parseJSON(b);b={filterData:b};var c=mesour.core.createLink(a,'applyFilter',b,true);$.post(c[0],c[1]).complete(mesour.core.redrawCallback)};mesour.filter.Filter=function(f,g){var h=this;var j={};var l=g;var m=g.attr('data-dropdown-link');var n=$('.full-reset[data-filter-name="'+f+'"]');this.apply=function(){mesour.filter.applyFilter(f,l.val())};this.getDropdowns=function(){return j};this.getName=function(){return f};this.getDropDownLink=function(){return m};this.getFilterModal=function(){return p};this.closeAll=function(a){for(var x in j){j[x].update()}g.find('.dropdown').each(function(){if(!a||$(this)[0]!==a[0]){$(this).removeClass('open');mesour.cookie(f+'-'+$(this).attr('data-filter'),0)}})};var o=$.parseJSON(l.attr('data-mesour-data'));this.getData=function(){return o};this.getPhpDateFormat=function(){return l.attr('data-mesour-date')};this.getJsDateFormat=function(){return l.attr('data-mesour-js-date')};var p=$('.mesour-filter-modal.modal-dialog');if(!p.is('*')){p=$('<div class="mesour-filter-modal modal-dialog"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button> <h4 class="modal-title">Custom filter</h4> </div> <div class="modal-body"> <form class="form-inline"> <p>Show rows where:</p> <div class="form-group"> <label class="sr-only"></label> <select class="form-control filter-how-1"> <option></option> <option value="equal_to">Equal to</option> <option value="not_equal_to">Not equal to</option> <option value="bigger">Is greater than</option> <option value="not_bigger">Is no greater than</option> <option value="smaller">Is smaller than</option> <option value="not_smaller">Is no smaller than</option> <option value="start_with">Starts with</option> <option value="not_start_with">Not starts with</option> <option value="end_with">Ends with</option> <option value="not_end_with">Not ends with</option> <option value="equal">Contains</option> <option value="not_equal">Not contains</option> </select> </div> <div class="form-group"> <label class="sr-only">Value</label> <div class="input-group date filter-datepicker1"> <input type="text" class="form-control filter-value-1" data-date-format="'+h.getJsDateFormat()+'" placeholder="Value"> <span class="input-group-addon"> <span class="glyphicon glyphicon-calendar"></span> </span> </div> </div> <br> <div class="form-group grid-operators"> <input type="radio" name="operator" class="filter-operator-and" value="and" checked="checked"> <label>and</label> <input type="radio" name="operator" class="filter-operator-or" value="or"> <label>or</label> </div> <br> <div class="form-group"> <label class="sr-only"></label> <select class="form-control filter-how-2"> <option></option> <option value="equal_to">Equal to</option> <option value="not_equal_to">Not equal to</option> <option value="bigger">Is greater than</option> <option value="not_bigger">Is no greater than</option> <option value="smaller">Is smaller than</option> <option value="not_smaller">Is no smaller than</option> <option value="start_with">Starts with</option> <option value="not_start_with">Not starts with</option> <option value="end_with">Ends with</option> <option value="not_end_with">Not ends with</option> <option value="equal">Contains</option> <option value="not_equal">Not contains</option> </select> </div> <div class="form-group"> <label class="sr-only">Value</label> <div class="input-group date filter-datepicker2"> <input type="text" class="form-control filter-value-2" data-date-format="'+h.getJsDateFormat()+'" placeholder="Value"> <span class="input-group-addon"> <span class="glyphicon glyphicon-calendar"></span> </span> </div> </div> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-primary btn-sm save-custom-filter">Ok</button> <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Storno</button> </div> <input type="hidden" data-name=""> </div> <!-- /.modal-content --> </div> <!-- /.modal-dialog -->');$('body').append(p);p.find('[aria-hidden="true"], [data-dismiss="modal"]').on('click.custom-filter',function(e){e.preventDefault();$(this).closest('.modal-dialog').fadeOut()});p.find('.save-custom-filter').on('click',function(){var a=p.find('[data-name]').val(),internalValues={how1:p.find('.filter-how-1').val(),how2:p.find('.filter-how-2').val(),val1:p.find('.filter-value-1').val(),val2:p.find('.filter-value-2').val(),operator:p.find('input[name="operator"]:checked').val()};if(internalValues.how1.length===0){alert('Please select some value in first select.');p.find('.filter-how-1').focus();return}if(internalValues.val1.length===0){alert('Please insert some value for first text input.');p.find('.filter-value-1').focus();return}if(internalValues.how2.length!==0&&internalValues.val2.length===0){alert('Please insert some value for second input.');p.find('.filter-value-2').focus();return}j[a].setValues(internalValues,'custom');j[a].setValues(j[a].getType()!=='date'?'text':'date','type');$(this).closest('.modal-dialog').fadeOut();j[a].update();j[a].save();j[a].getFilter().apply()})}this.getValues=function(a){var b=l.val();b=b.length===0?{}:$.parseJSON(b);if(!a){return b}else{if(!b[a]){return{}}else{return b[a]}}};this.setValues=function(a,b){var c=l.val().length>0?$.parseJSON(l.val()):{};c[b]=a;l.val(JSON.stringify(c))};this.refreshPriorities=function(){var a=h.getValues();var b={};for(var x in a){b[a[x].priority]=x}var c=[];for(var k in b){if(b.hasOwnProperty(k)){c.push(k)}}c.sort();var d=1;for(var i=0;i<c.length;i++){k=c[i];if(a[b[k]].priority){a[b[k]].priority=d;d++}}l.val(JSON.stringify(a))};this.generateNextPriority=function(){h.refreshPriorities();var a=h.getValues();var b=[];for(var x in a){b.push(a[x].priority)}if(b.length>0){var c=1;for(var y=0;y<b.length;y++){if(b[y]>c){c=b[y]+1}else if(b[y]===c){c++}}return c}else{return 1}};this.filterData=function(a,b){var c=h.getData(),output=[];for(var x in c){if(b.indexOf(c[x][a])!==-1){output.push(c[x])}}return output};this.filterCheckers=function(){var a=h.getValues(),usedPriorities={};for(var x in a){usedPriorities[a[x].priority]=x}var b=[];for(var k in usedPriorities){if(usedPriorities.hasOwnProperty(k)){b.push(k)}}b.sort();var c={},newData=h.getData();for(var i=0;i<b.length;i++){k=b[i];c[usedPriorities[k]]=true;j[usedPriorities[k]].destroy();j[usedPriorities[k]].create(newData,true);j[usedPriorities[k]].update();if(a[usedPriorities[k]].checkers&&a[usedPriorities[k]].checkers.length>0)newData=h.filterData(usedPriorities[k],a[usedPriorities[k]].checkers)}for(var x in j){var d=j[x];if(c[d.getName()])continue;j[x].destroy();j[x].create(newData,true);j[x].update()}};n.on('click',function(e){e.preventDefault();$.each(h.getDropdowns(),function(a,b){b.unsetValues('custom');b.unsetValues('priority');b.unsetValues('checkers');b.update();b.getFilter().filterCheckers()});h.apply()});$('.dropdown[data-filter-name="'+f+'"]').each(function(){var a=$(this),name=a.attr('data-filter');j[name]=new mesour.filter.DropDown(a,name,h);a.data('grid-filter-dropdown',j[name])});h.filterCheckers();if($.fn.bootstrapDatetimepicker){$('.filter-datepicker1, .filter-datepicker2').bootstrapDatetimepicker({pickTime:false})}};
/* src/mesour.filter.DropDown.js */
mesour.filter.applyDropDown=function(a,b,c){if(c!==''){var d=c.id;var e=c.opened;mesour.cookie(a+'-'+d,e)}};mesour.filter.DropDown=function(w,z,A){var B=this;var C=w.attr('data-type');var D,checkers,mouseIn=false;var E=function(){};var F=function(){var a=w.find('.box-inner').find('ul');a.find('li:not(.all-select-li):not(.all-select-searched-li)').remove()};this.destroy=function(){F()};this.create=function(a,b){E(a,b)};var G=function(a){mesour.filter.applyDropDown(A.getName(),A.getDropDownLink(),a)};E=function(d,e){d=!d?A.getData():d;if(!d)return;var f={};for(var x=0;x<d.length;x++){if(typeof d[x][z]==='undefined'){throw new Error('MesourFilterDropDownException: Column "'+z+'" does not exists in data.');}if(!f[d[x][z]]){f[d[x][z]]={val:d[x][z],keys:[x]}}else{f[d[x][z]].keys.push(x)}}if(!C){var g=w.find('.box-inner').find('ul');for(var y in f){if(!f[y].val&&Number(f[y].val)!==0)continue;var h=$('<li>'),id=z+(typeof f[y].val.replace==='function'?f[y].val.replace(' ',''):f[y].val);h.append('<input type="checkbox" class="checker" data-value="'+f[y].val+'" id="'+id+'">');h.append('&nbsp;');h.append('<label for="'+id+'">'+f[y].val+'</label>');g.append(h)}}else if(C==='date'){var i=[],months={};for(var y in f){if(!f[y].val)continue;var j=isNaN(f[y].val);var k=j?mesour.core.strtotime(f[y].val):f[y].val;var l=mesour.core.phpDate('Y',k);var m=mesour.core.phpDate('n',k);var n=mesour.core.phpDate('j',k);if(i.indexOf(l)===-1){i.push(l)}if(!months[l]){months[l]={};months[l]['months']=[];months[l]['days']={}}if(months[l]['months'].indexOf(m)===-1){months[l]['months'].push(m)}if(!months[l]['days'][m]){months[l]['days'][m]=[]}if(months[l]['days'][m].indexOf(n)===-1){months[l]['days'][m].push(n)}}i.sort(function(a,b){return b-a});var g=w.find('.box-inner').find('ul');for(var a in i){var o=$('<li>');o.append('<span class="glyphicon glyphicon-plus toggle-sub-ul"></span>');o.append('&nbsp;');o.append('<input type="checkbox" class="checker">');o.append('&nbsp;');o.append('<label>'+i[a]+'</label>');o.append('<span class="close-all">(<a href="#">Close all</a>)</span>');var p=$('<ul class="toggled-sub-ul">');o.append(p);months[i[a]].months.sort(function(a,b){return a-b});var m=months[i[a]].months;for(var b in m){var q=$('<li>');q.append('<span class="glyphicon glyphicon-plus toggle-sub-ul"></span>');q.append('&nbsp;');q.append('<input type="checkbox" class="checker">');q.append('&nbsp;');q.append('<label>'+mesour.filter.translations.months[m[b]]+'</label>');p.append(q);var r=$('<ul class="toggled-sub-ul">');q.append(r);months[i[a]].days[m[b]].sort(function(a,b){return a-b});var s=months[i[a]].days[m[b]];for(var c in s){var t=mesour.core.strtotime(i[a]+'-'+m[b]+'-'+s[c]);var u=j?mesour.core.phpDate(A.getPhpDateFormat(),t):t;var v=$('<li>');v.append('<span class="glyphicon">&nbsp;</span>');v.append('<input type="checkbox" class="checker" data-value="'+u+'">');v.append('&nbsp;');v.append('<label>'+s[c]+'</label>');r.append(v)}}g.append(o)}}if(e){checkers=new mesour.filter.Checkers(B)}};E();this.getName=function(){return z};this.getType=function(){return!C?'text':C};this.getElement=function(){return w};this.getValues=function(a){var b=A.getValues(z);if(!a){return b}else{if(!b[a]){return{}}else{return b[a]}}};this.setValues=function(a,b){var c=A.getValues(z);c[b]=a;A.setValues(c,z)};this.unsetValues=function(a){var b=A.getValues(z);delete b[a];A.setValues(b,z)};this.getFilter=function(){return A};D=new mesour.filter.CustomFilter(this);checkers=new mesour.filter.Checkers(this);this.update=function(){var a=B.getValues(),toggle_button=w.find('.dropdown-toggle'),menu=w.find('.dropdown-menu'),first_submenu=menu.children('.dropdown-submenu');toggle_button.find('.glyphicon-ok').hide();first_submenu.find('.glyphicon').closest('button').hide();if(a){if(a.custom&&a.custom.operator){toggle_button.find('.glyphicon-ok').show();first_submenu.find('.glyphicon').closest('button').show()}if(a.checkers&&a.checkers[0]){toggle_button.find('.glyphicon-ok').show();for(var x=0;x<a.checkers.length;x++){checkers.check(a.checkers[x])}}}};this.toggle=function(){if(B.isOpened()){B.close()}else{B.open()}};this.isOpened=function(){return w.hasClass('open')};this.open=function(){A.closeAll(w);w.addClass('open');G({id:B.getName(),opened:1})};this.close=function(){B.update();w.removeClass('open');G({id:B.getName(),opened:0})};w.on({mouseenter:function(){mouseIn=true},mouseleave:function(){mouseIn=false}});$('.mesour-filter-modal').on({mouseenter:function(){mouseIn=true},mouseleave:function(){mouseIn=false}});$('html').on('click.filter-el-'+z,function(){if(B.isOpened()&&!mouseIn){B.close()}});w.children('button').on('click',function(e){e.preventDefault();A.closeAll(w);B.toggle(w)});w.find('.reset-filter').on({click:function(){B.unsetValues('custom');B.update();B.save();A.apply()},mouseenter:function(){$(this).removeClass('btn-success').addClass('btn-danger')},mouseleave:function(){$(this).removeClass('btn-danger').addClass('btn-success')}});w.find('.close-filter').on('click',function(e){e.preventDefault();B.update();B.close()});this.save=function(){var a=checkers.getChecked();if(a.length>0){B.setValues(B.getFilter().generateNextPriority(),'priority');B.setValues(a,'checkers');B.setValues(C!=='date'?'text':'date','type')}else{B.unsetValues('priority');B.unsetValues('checkers')}};this.update()};